'''This script can sniff the packets in given interface along with capturing the plain text data.'''

from scapy.all import *
from scapy.layers.inet import IP, TCP
from colorama import init, Fore
from scapy.layers.inet6 import IPv6  # Import IPv6 layer
from scapy.layers.http import HTTPRequest  # Import HttpRequest

init()

#Using Foreground colors for text
red = Fore.RED
green = Fore.GREEN
blue = Fore.BLUE
yellow = Fore.YELLOW
cyan = Fore.CYAN
reset = Fore.RESET

def sniff_packets(iface):
    if iface:
        sniff(filter = 'port 80', prn=process_packet, iface=iface, store=False) #Filtering out the packets on port 80 from given interface(iface)
    else:
        sniff(prn=process_packet, store=False)

print("Packet Sniffing")
def process_packet(packet):
    if packet.haslayer(TCP):
        if packet.haslayer(IP):
            src_ip = packet[IP].src 
            dst_ip = packet[IP].dst 
        elif packet.haslayer(IPv6):
            src_ip = packet[IPv6].src
            dst_ip = packet[IPv6].dst
        
        src_port = packet[TCP].sport 
        dst_port = packet[TCP].dport 

        # print("Packet captured:", packet.summary())  # If you want to Print summary of all captured packets. Use it without filtering specific packets in line 19.
        print(f"{blue} [+] {src_ip} {reset}is using port {green}{src_port} {reset}to connect to {red}{dst_ip} {reset}at port {green}{dst_port}{reset}")

        #Code block below is for capturing HTTPRequest only
        if packet.haslayer(HTTPRequest):
            url = packet[HTTPRequest].Host.decode() + packet[HTTPRequest].Path.decode() #Identifying and Decoding Host and Path
            method = packet[HTTPRequest].Method.decode() #Identifying and Decoding Method used(GET/POST etc.)
            print(f"{cyan}[+] {src_ip} {reset}is making a HTTP request to {blue}{url} {reset}with method {yellow}{method}{reset}")
            print(f"[+] HTTP Data:")   #For capturing Headers and related data
            print(f"{yellow} {packet[HTTPRequest].show()}")

            if(packet.haslayer(Raw)): #To capture the Raw/plaintext data like credentials
                print(f"{red}[+] Useful raw data: {packet.getlayer(Raw).load.decode()}{reset}")  #Higlighting and Printing the raw data in red color
# Use the appropriate network interface name for Windows
sniff_packets('MediaTek Wi-Fi 6 MT7921 Wireless LAN Card')  # Replace 'MediaTek Wi-Fi 6 MT7921 Wireless LAN Card' with the correct network interface name for your Windows
